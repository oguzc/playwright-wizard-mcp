name: Publish to npm and MCP Registry

on:
  release:
    types: [published]

jobs:
  publish:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Configure npm for retry
        run: |
          npm config set fetch-retry-mintimeout 20000
          npm config set fetch-retry-maxtimeout 120000
          npm config set fetch-retries 5
      
      - name: Install dependencies with retry
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 10
          max_attempts: 3
          retry_wait_seconds: 30
          command: npm ci
      
      - name: Build
        run: npm run build
      
      - name: Publish to npm
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 10
          max_attempts: 3
          retry_wait_seconds: 30
          command: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Update server.json version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          jq --arg v "$VERSION" '.version = $v | .packages[0].version = $v' server.json > tmp && mv tmp server.json

      - name: Install MCP Publisher
        run: |
          # Get the latest release tag
          LATEST_TAG=$(curl -s https://api.github.com/repos/modelcontextprotocol/registry/releases/latest | jq -r .tag_name)
          if [[ "$LATEST_TAG" == "null" || -z "$LATEST_TAG" ]]; then
            echo "‚ö†Ô∏è  No MCP Publisher release found, skipping MCP Registry publishing"
            exit 1
          fi
          
          echo "üì¶ Installing MCP Publisher $LATEST_TAG"
          ARCH=$(uname -m | sed 's/x86_64/amd64/;s/aarch64/arm64/')
          OS=$(uname -s | tr '[:upper:]' '[:lower:]')
          
          # Extract version number from tag (e.g., v1.2.3 -> 1.2.3)
          VERSION=${LATEST_TAG#v}
          
          # Download with correct naming pattern: mcp-publisher_VERSION_OS_ARCH.tar.gz
          curl -L "https://github.com/modelcontextprotocol/registry/releases/download/$LATEST_TAG/mcp-publisher_${VERSION}_${OS}_${ARCH}.tar.gz" | tar xz
          chmod +x mcp-publisher

      - name: Login to MCP Registry
        id: mcp-login
        continue-on-error: true
        run: |
          if [[ -f "./mcp-publisher" ]]; then
            ./mcp-publisher login github-oidc
          else
            echo "‚ö†Ô∏è  MCP Publisher not available, skipping login"
            exit 1
          fi

      - name: Publish to MCP Registry
        id: mcp-publish
        if: steps.mcp-login.outcome == 'success'
        continue-on-error: true
        run: ./mcp-publisher publish
        
      - name: MCP Registry publish status
        run: |
          if [[ ! -f "./mcp-publisher" ]]; then
            echo "‚ö†Ô∏è  MCP Publisher not installed - MCP Registry publishing skipped"
            echo "üìù You can manually publish later using: https://registry.modelcontextprotocol.io"
          elif [[ "${{ steps.mcp-login.outcome }}" != "success" ]]; then
            echo "‚ö†Ô∏è  MCP Registry login failed - check OIDC configuration"
          elif [[ "${{ steps.mcp-publish.outcome }}" != "success" ]]; then
            echo "‚ö†Ô∏è  MCP Registry publish failed - manual publish may be needed"
          else
            echo "‚úÖ Successfully published to MCP Registry"
          fi
